# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MockAPI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

Write-Host "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MockAPI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏" -ForegroundColor Cyan

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
Write-Host "`n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MockAPI..." -ForegroundColor Yellow
try {
    $healthResponse = Invoke-RestMethod -Uri "http://localhost:8080/cashback/health" -Method GET
    Write-Host "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: $($healthResponse.message)" -ForegroundColor Green
    Write-Host "   –†–µ–∂–∏–º: $($healthResponse.currentMode)" -ForegroundColor Green
    Write-Host "   –°—Ç–∞—Ç—É—Å: $($healthResponse.connected)" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è: $($_.Exception.Message)" -ForegroundColor Red
}

# 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ (—Ç—Ä–µ–±—É–µ—Ç –∞–¥–º–∏–Ω–∞)
Write-Host "`n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤..." -ForegroundColor Yellow
$headers = @{
    "X-User-Phone" = "+996701234567"
}

try {
    $productsResponse = Invoke-RestMethod -Uri "http://localhost:8080/cashback/products" -Method GET -Headers $headers
    Write-Host "‚úÖ –¢–æ–≤–∞—Ä—ã –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    Write-Host "   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: $($productsResponse.data.Count)" -ForegroundColor Green
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ç–æ–≤–∞—Ä–∞
    Write-Host "`n   –ü–µ—Ä–≤—ã–µ —Ç–æ–≤–∞—Ä—ã:" -ForegroundColor Cyan
    for ($i = 0; $i -lt [Math]::Min(3, $productsResponse.data.Count); $i++) {
        $product = $productsResponse.data[$i]
        Write-Host "   - $($product.name): $($product.price) (ID: $($product.id))" -ForegroundColor White
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤: $($_.Exception.Message)" -ForegroundColor Red
    if ($_.Exception.Response) {
        $reader = New-Object System.IO.StreamReader($_.Exception.Response.GetResponseStream())
        $responseBody = $reader.ReadToEnd()
        Write-Host "   –î–µ—Ç–∞–ª–∏: $responseBody" -ForegroundColor Red
    }
}

# 3. –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
Write-Host "`n3. –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤..." -ForegroundColor Yellow
try {
    $searchResponse = Invoke-RestMethod -Uri "http://localhost:8080/cashback/products/search?query=iPhone" -Method GET -Headers $headers
    Write-Host "‚úÖ –ü–æ–∏—Å–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω!" -ForegroundColor Green
    Write-Host "   –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: $($searchResponse.data.Count)" -ForegroundColor Green
    
    if ($searchResponse.data.Count -gt 0) {
        Write-Host "   –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:" -ForegroundColor Cyan
        foreach ($product in $searchResponse.data) {
            Write-Host "   - $($product.name): $($product.price)" -ForegroundColor White
        }
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor Cyan
